on:
  release:
    types: [created]

permissions:
    contents: write
    packages: write

jobs:
  build-image:
    name: Build Image
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v3

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Get Current Release
      id: get_current_release
      uses: joutvhu/get-release@v1
      with:
        debug: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      id: build-and-push-release
      uses: docker/build-push-action@v6
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        context: .
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_current_release.outputs.tag_name }}

  binary-builds:
    name: Build Banaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos:
          - linux
          - freebsd
          - windows
        goarch:
          - amd64
          - arm
          - arm64
          - "386"
    steps:
    - uses: actions/checkout@v4
    - uses: wangyoucao577/go-release-action@v1
      name: Build ${{ matrix.goos }}/${{ matrix.goarch }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        ldflags: -w -extldflags '-static'
        extra_files: LICENSE README.md docs
